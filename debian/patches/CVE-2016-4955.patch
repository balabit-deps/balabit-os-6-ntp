Description: fix denial of service via spoofed crypto-NAK or incorrect MAC
Bug: http://support.ntp.org/bin/view/Main/NtpBug3043
Origin: vendor, http://pkgs.fedoraproject.org/cgit/rpms/ntp.git/tree/ntp-4.2.6p5-cve-2016-4955.patch

Index: ntp-4.2.8p4+dfsg/ntpd/ntp_proto.c
===================================================================
--- ntp-4.2.8p4+dfsg.orig/ntpd/ntp_proto.c	2016-10-05 07:59:13.385540000 -0400
+++ ntp-4.2.8p4+dfsg/ntpd/ntp_proto.c	2016-10-05 08:00:58.514505691 -0400
@@ -1397,15 +1397,17 @@
 		report_event(PEVNT_AUTH, peer, "crypto_NAK");
 		peer->flash |= TEST5;		/* bad auth */
 		peer->badauth++;
-		if (peer->flags & FLAG_PREEMPT && hismode != MODE_BROADCAST &&
-		    !(peer->flash & (TEST2 | TEST3))) {
-			unpeer(peer);
-			return;
-		}
+		if (hismode != MODE_BROADCAST &&
+					!(peer->flash & (TEST2 | TEST3))) {
+			if (peer->flags & FLAG_PREEMPT) {
+				unpeer(peer);
+				return;
+			}
 #ifdef AUTOKEY
-		if (peer->crypto)
-			peer_clear(peer, "AUTH");
+			if (peer->crypto)
+				peer_clear(peer, "AUTH");
 #endif	/* AUTOKEY */
+		}
 		return;
 
 	/*
@@ -1424,15 +1426,17 @@
 		if (   has_mac
 		    && (hismode == MODE_ACTIVE || hismode == MODE_PASSIVE))
 			fast_xmit(rbufp, MODE_ACTIVE, 0, restrict_mask);
-		if (peer->flags & FLAG_PREEMPT && hismode != MODE_BROADCAST &&
-		    !(peer->flash & (TEST2 | TEST3))) {
-			unpeer(peer);
-			return;
-		}
+		if (hismode != MODE_BROADCAST &&
+					!(peer->flash & (TEST2 | TEST3))) {
+			if (peer->flags & FLAG_PREEMPT) {
+				unpeer(peer);
+				return;
+			}
 #ifdef AUTOKEY
-		if (peer->crypto)
-			peer_clear(peer, "AUTH");
+			if (peer->crypto)
+				peer_clear(peer, "AUTH");
 #endif	/* AUTOKEY */
+		}
 		return;
 	}
 
