

    TOPntp-stable1.3686.16.1 changes

NTP - Network Time Protocol
#### ChangeSet ####

2016-09-23 20:00:55+02:00, perlinger@ntp.org
  [Sec 3119] Trap crash

#==== ChangeLog ====
#
#2016-09-23 20:00:55+02:00, perlinger@ntp.org +3 -0
#  [Sec 3119] Trap crash
#--- 1.1834/ChangeLog	2016-06-02 11:39:59 +00:00
#+++ 1.1834.16.1/ChangeLog	2016-09-23 18:00:55 +00:00
#@@ -1,3 +1,6 @@
#+---
#+* [Sec 3119] Trap crash <perlinger@ntp.org>
#+
# ---
# (4.2.8p8) 2016/06/02 Released by Harlan Stenn <stenn@ntp.org>
# 
#
#==== ntpd/ntp_control.c ====
#
#2016-09-23 20:00:55+02:00, perlinger@ntp.org +19 -4
#  [Sec 3119] Trap crash
#   - bail out if we hit a Peer Event without a peer.
Index: ntp-4.2.8p4+dfsg/ntpd/ntp_control.c
===================================================================
--- ntp-4.2.8p4+dfsg.orig/ntpd/ntp_control.c	2017-06-28 10:22:07.403869783 -0400
+++ ntp-4.2.8p4+dfsg/ntpd/ntp_control.c	2017-06-28 10:22:07.399869733 -0400
@@ -5004,6 +5004,22 @@ report_event(
 	if (num_ctl_traps <= 0)
 		return;
 
+	/* [Bug 3119]
+	 * Peer Events should be associated with a peer -- hence the
+	 * name. But there are instances where this function is called
+	 * *without* a valid peer. This happens e.g. with an unsolicited
+	 * CryptoNAK, or when a leap second alarm is going off while
+	 * currently without a system peer.
+	 *
+	 * The most sensible approach to this seems to bail out here if
+	 * this happens. Avoiding to call this function would also
+	 * bypass the log reporting in the first part of this function,
+	 * and this is probably not the best of all options.
+	 *   -*-perlinger@ntp.org-*-
+	 */
+	if ((err & PEER_EVENT) && !peer)
+		return;
+
 	/*
 	 * Set up the outgoing packet variables
 	 */
@@ -5020,15 +5036,14 @@ report_event(
 		/* Include the core system variables and the list. */
 		for (i = 1; i <= CS_VARLIST; i++)
 			ctl_putsys(i);
-	} else {
-		INSIST(peer != NULL);
+	} else if (NULL != peer) { /* paranoia -- skip output */
 		rpkt.associd = htons(peer->associd);
 		rpkt.status = htons(ctlpeerstatus(peer));
 
 		/* Dump it all. Later, maybe less. */
 		for (i = 1; i <= CP_MAX_NOAUTOKEY; i++)
 			ctl_putpeer(i, peer);
-#ifdef REFCLOCK
+#	    ifdef REFCLOCK
 		/*
 		 * for clock exception events: add clock variables to
 		 * reflect info on exception
@@ -5054,7 +5069,7 @@ report_event(
 						    FALSE);
 			free_varlist(cs.kv_list);
 		}
-#endif /* REFCLOCK */
+#	    endif /* REFCLOCK */
 	}
 
 	/*
