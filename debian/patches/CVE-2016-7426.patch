Description: fix DoS via responses with a spoofed source address
Origin: based on https://git.centos.org/blob/rpms!ntp.git/4eb1db127a6177011bd913bf4f446e8f701179d6/SOURCES!ntp-4.2.6p5-cve-2016-7426.patch
Bug: http://support.ntp.org/bin/view/Main/NtpBug3071

Index: ntp-4.2.8p4+dfsg/ntpd/ntp_proto.c
===================================================================
--- ntp-4.2.8p4+dfsg.orig/ntpd/ntp_proto.c	2017-06-28 09:34:35.100254099 -0400
+++ ntp-4.2.8p4+dfsg/ntpd/ntp_proto.c	2017-06-28 09:34:35.096254043 -0400
@@ -593,36 +593,7 @@ receive(
 	}
 
 	/*
-	 * Update the MRU list and finger the cloggers. It can be a
-	 * little expensive, so turn it off for production use.
-	 * RES_LIMITED and RES_KOD will be cleared in the returned
-	 * restrict_mask unless one or both actions are warranted.
-	 */
-	restrict_mask = ntp_monitor(rbufp, restrict_mask);
-	if (restrict_mask & RES_LIMITED) {
-		sys_limitrejected++;
-		if (   !(restrict_mask & RES_KOD)
-		    || MODE_BROADCAST == hismode
-		    || MODE_SERVER == hismode) {
-			if (MODE_SERVER == hismode)
-				DPRINTF(1, ("Possibly self-induced rate limiting of MODE_SERVER from %s\n",
-					stoa(&rbufp->recv_srcadr)));
-			return;			/* rate exceeded */
-		}
-		if (hismode == MODE_CLIENT)
-			fast_xmit(rbufp, MODE_SERVER, skeyid,
-			    restrict_mask);
-		else
-			fast_xmit(rbufp, MODE_ACTIVE, skeyid,
-			    restrict_mask);
-		return;				/* rate exceeded */
-	}
-	restrict_mask &= ~RES_KOD;
-
-	/*
-	 * We have tossed out as many buggy packets as possible early in
-	 * the game to reduce the exposure to a clogging attack. Now we
-	 * have to burn some cycles to find the association and
+	 * now we have to burn some cycles to find the association and
 	 * authenticate the packet if required. Note that we burn only
 	 * digest cycles, again to reduce exposure. There may be no
 	 * matching association and that's okay.
@@ -645,6 +616,27 @@ receive(
 	NTOHL_FP(&pkt->xmt, &p_xmt);
 
 	/*
+	 * Update the MRU list and finger the cloggers. It can be a
+	 * little expensive, so turn it off for production use.
+	 */
+	restrict_mask = ntp_monitor(rbufp, restrict_mask);
+	if (restrict_mask & RES_LIMITED && retcode == AM_FXMIT) {
+		sys_limitrejected++;
+		if (!(restrict_mask & RES_KOD) || MODE_BROADCAST ==
+		    hismode || MODE_SERVER == hismode)
+			return;			/* rate exceeded */
+
+		if (hismode == MODE_CLIENT)
+			fast_xmit(rbufp, MODE_SERVER, skeyid,
+			    restrict_mask);
+		else
+			fast_xmit(rbufp, MODE_ACTIVE, skeyid,
+			    restrict_mask);
+		return;				/* rate exceeded */
+	}
+	restrict_mask &= ~RES_KOD;
+
+	/*
 	 * Authentication is conditioned by three switches:
 	 *
 	 * NOPEER  (RES_NOPEER) do not mobilize an association unless
@@ -1126,6 +1118,10 @@ receive(
 #endif /* AUTOKEY */
 		if (!AUTH(sys_authenticate | (restrict_mask &
 		    (RES_NOPEER | RES_DONTTRUST)), is_authentic)) {
+			if (restrict_mask & RES_LIMITED) {
+				sys_limitrejected++;
+				return;
+			}
 
 			/*
 			 * If authenticated but cannot mobilize an
